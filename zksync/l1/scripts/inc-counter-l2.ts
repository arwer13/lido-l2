/* eslint-disable prettier/prettier */
import { ethers } from 'hardhat';
import '@nomiclabs/hardhat-ethers';
import { Deployer } from './deploy';
import { Wallet } from 'ethers';

import { richWallet } from './rich_wallet';
import { web3Provider, zkSyncUrl } from './utils';
import { formatEther } from 'ethers/lib/utils';
import { Provider, utils, Contract } from 'zksync-web3';
import { L1Executor__factory } from '../typechain/factories/l1/contracts/governance/L1Executor__factory';

const provider = web3Provider();
const zkProvider = new Provider(zkSyncUrl());

const COUNTER_ADDRESS = '0x9Faf1eDDc9A37a235787342304A90a7Bcc2228A0';
const L1_EXECUTOR_ADDR = '0xdC337bA133aC4CcCd01eF691973ec9925ed50212';

// L2 to L2
async function main() {
	const wallet = new Wallet(richWallet[1].privateKey, provider);
	const zkWallet = new Wallet(richWallet[1].privateKey, zkProvider);

	const CounterContract = new Contract(
		COUNTER_ADDRESS,
		counterContract.abi,
		zkWallet
	);

	console.log(
		'CounterContract value before Incrementing:',
		await (await CounterContract.value()).toString()
	);
	console.log(
		'CounterContract last called address:',
		await CounterContract.lastAddress()
	);
	console.log(
		'CounterContract lastAddressL1:',
		await CounterContract.lastAddressL1()
	);
	console.log(
		'CounterContract last governance address:',
		await CounterContract.governance()
	);

	const gasPrice = await provider.getGasPrice();

	const deployer = new Deployer({
		deployWallet: wallet,
		governorAddress: wallet.address,
		verbose: true,
	});

	const governorAgent = deployer.defaultGovernanceAgent(wallet);
	const zkSync = deployer.zkSyncContract(wallet);
	console.log('governorAgent L1:', governorAgent.address);
	console.log(
		'\n============================================================================'
	);

	console.log(
		'new gov address on L2:',
		utils.applyL1ToL2Alias(governorAgent.address)
	);

	console.log('wallet address on L2:', utils.applyL1ToL2Alias(wallet.address));
	console.log('zkSync address on L2:', utils.applyL1ToL2Alias(zkSync.address));
	console.log(
		'executor address on L2:',
		utils.applyL1ToL2Alias(L1_EXECUTOR_ADDR)
	);

	console.log(
		'\n============================================================================'
	);

	console.log(
		'UNDO ALIASING',
		utils.undoL1ToL2Alias(utils.applyL1ToL2Alias(L1_EXECUTOR_ADDR))
	);

	console.log(
		'\n============================================================================'
	);

	const counterInterface = new ethers.utils.Interface(counterContract.abi);
	const dataToIncrement = counterInterface.encodeFunctionData('increment', []);

	const gasLimit = await zkProvider.estimateL1ToL2Execute({
		contractAddress: COUNTER_ADDRESS,
		calldata: dataToIncrement,
	});

	const baseCost = await zkSync.l2TransactionBaseCost(
		gasPrice,
		gasLimit,
		utils.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT
	);

	console.log('BASE COST', formatEther(baseCost));

	const L1EXE = L1Executor__factory.connect(L1_EXECUTOR_ADDR, wallet);

	const encodedVal = L1EXE.interface.encodeFunctionData('callZkSync', [
		zkSync.address,
		COUNTER_ADDRESS,
		dataToIncrement,
		gasLimit,
		utils.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT,
	]);

	// send directly using wrapper
	// const tx = await L1EXE.callZkSync(
	// 	zkSync.address,
	// 	COUNTER_ADDRESS,
	// 	dataToIncrement,
	// 	gasLimit,
	// 	utils.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT,
	// 	{
	// 		value: baseCost,
	// 		gasPrice,
	// 	}
	// );

	const requestL2TransactionEncodedToIncrement =
		zkSync.interface.encodeFunctionData('requestL2Transaction', [
			COUNTER_ADDRESS,
			0,
			encodedVal,
			gasLimit,
			utils.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT,
			[new Uint8Array()],
			ethers.constants.AddressZero,
		]);

	// const govBalanceBefore = await provider.getBalance(governorAgent.address);
	// console.log('Before balance:', formatEther(govBalanceBefore));

	// const tx = await wallet.sendTransaction({
	// 	to: zkSync.address,
	// 	value: baseCost,
	// 	data: requestL2TransactionEncodedToIncrement,
	// 	gasPrice,
	// 	gasLimit: 10_000_000,
	// });

	// const tx = await governorAgent.execute(
	// 	zkSync.address,
	// 	baseCost,
	// 	requestL2TransactionEncodedToIncrement,
	// 	{ gasPrice, gasLimit: 10_000_000 }
	// );

	// send via governor agent
	const tx = await governorAgent.execute(
		L1_EXECUTOR_ADDR,
		baseCost,
		encodedVal,
		{ gasPrice, gasLimit: 10_000_000 }
	);

	await tx.wait();

	const l2Response = await zkProvider.getL2TransactionFromPriorityOp(tx);
	const l2Receipt = await l2Response.wait();

	console.log(l2Receipt);

	const govBalanceAfter = await provider.getBalance(governorAgent.address);
	console.log('After balance:', formatEther(govBalanceAfter));

	console.log(
		'\n============================================================================'
	);

	console.log(
		'CounterContract value before Incrementing:',
		await (await CounterContract.value()).toString()
	);
	console.log(
		'CounterContract last caller of L2:',
		await CounterContract.lastAddress()
	);

	console.log(
		'CounterContract lastAddressL1:',
		await CounterContract.lastAddressL1()
	);

	console.log(
		'CounterContract governance address:',
		await CounterContract.governance()
	);
	console.log(
		'CounterContract governance address L2:',
		await CounterContract.governanceL2()
	);
	console.log(
		'L1/L1 address: governance == AddressAliasHelper.undoL1ToL2Alias(msg.sender):',
		await CounterContract.areSame()
	);
	console.log(
		'L2/L2 address:governanceL2 == msg.sender:',
		await CounterContract.areSameTwo()
	);
}

const counterContract = {
	_format: 'hh-zksolc-artifact-1',
	contractName: 'Counter',
	sourceName: 'contracts/Counter.sol',
	abi: [
		{
			inputs: [
				{
					internalType: 'address',
					name: 'newGovernance',
					type: 'address',
				},
				{
					internalType: 'address',
					name: 'newGovernanceTwo',
					type: 'address',
				},
			],
			stateMutability: 'nonpayable',
			type: 'constructor',
		},
		{
			inputs: [],
			name: 'areSame',
			outputs: [
				{
					internalType: 'bool',
					name: '',
					type: 'bool',
				},
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'areSameTwo',
			outputs: [
				{
					internalType: 'bool',
					name: '',
					type: 'bool',
				},
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'governance',
			outputs: [
				{
					internalType: 'address',
					name: '',
					type: 'address',
				},
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'governanceL2',
			outputs: [
				{
					internalType: 'address',
					name: '',
					type: 'address',
				},
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'increment',
			outputs: [],
			stateMutability: 'nonpayable',
			type: 'function',
		},
		{
			inputs: [],
			name: 'lastAddress',
			outputs: [
				{
					internalType: 'address',
					name: '',
					type: 'address',
				},
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'lastAddressL1',
			outputs: [
				{
					internalType: 'address',
					name: '',
					type: 'address',
				},
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'value',
			outputs: [
				{
					internalType: 'uint256',
					name: '',
					type: 'uint256',
				},
			],
			stateMutability: 'view',
			type: 'function',
		},
	],
	bytecode:
		'0x0002000000000002000100000001035500000060011002700000005f0010019d0000000101200190000000320000c13d0000008001000039000000400010043f0000000001000031000000040110008c000001430000413d0000000101000367000000000101043b000000e001100270000000670210009c000000410000213d0000006d0210009c000000a10000213d000000700210009c000000e30000613d000000710110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000101000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d00000000010000310000009f02100039000000200300008a000000000232016f000000600320009c000000620000413d000000650100004100000000001004350000004101000039000000040010043f00000066010000410000017700010430000000680210009c000000c10000213d0000006b0210009c000000f80000613d0000006c0110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d000000000100041a000000010200008a000000000221004b000001500000c13d000000650100004100000000001004350000001101000039000000040010043f00000066010000410000017700010430000000400020043f0000001f0210018f00000001030003670000000504100272000000700000613d00000000050000190000000506500210000000000763034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b000000680000413d000000000520004c0000007f0000613d0000000504400210000000000343034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000006102000041000000400310008c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d000000800100043d000000620210009c000001430000213d000000a00200043d000000620320009c000001430000213d0000000103000039000000000030041b000000000403041a0000006304400197000000000114019f000000000013041b0000000201000039000000000301041a0000006303300197000000000223019f000000000021041b0000002001000039000001000010044300000120000004430000006401000041000001760001042e0000006e0210009c000001140000613d0000006f0110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000201000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e000000690210009c000001320000613d0000006a0110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000401000039000000000101041a00000072011001980000000001000019000000010100c039000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d000000000100041a000000800010043f0000007901000041000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000301000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000401000039000000000101041a00000078011001980000000001000019000000010100c039000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001450000613d000000000100001900000177000104300000000401000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000101100039000000000010041b0000000301000039000000000201041a00000063022001970000000003000411000000000232019f000000000021041b0000000201000039000000000101041a00000062011001970000007402000041000000000131004b00000000010000190000000001026019000000750230004100000062022001970000000103000039000000000303041a00000062033001970000007604000041000000000323004b000000000300001900000000030460190000000404000039000000000504041a0000007705500197000000000225019f000000000232019f000000000112019f000000000014041b0000005f01000041000000400200043d0000005f0320009c00000000010240190000004001100210000001760001042e0000017500000432000001760001042e0000017700010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000100000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000cd68100b00000000000000000000000000000000000000000000000000000000e79b147800000000000000000000000000000000000000000000000000000000e79b147900000000000000000000000000000000000000000000000000000000eee17bee00000000000000000000000000000000000000000000000000000000cd68100c00000000000000000000000000000000000000000000000000000000d09de08a00000000000000000000000000000000000000000000000000000000bdb1f55e00000000000000000000000000000000000000000000000000000000bdb1f55f00000000000000000000000000000000000000000000000000000000bfa75d4b000000000000000000000000000000000000000000000000000000003fa4f245000000000000000000000000000000000000000000000000000000005aa6e67500000000000000000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000eeeeffffffffffffffffffffffffffffffffeeef0000000000000000000000010000000000000000000000000000000000000000ffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000002000000080000000000000000039179d4f65a178d74876dab1a667c549a63351701c0f7ba1042917c4bf864188',
	deployedBytecode:
		'0x0002000000000002000100000001035500000060011002700000005f0010019d0000000101200190000000320000c13d0000008001000039000000400010043f0000000001000031000000040110008c000001430000413d0000000101000367000000000101043b000000e001100270000000670210009c000000410000213d0000006d0210009c000000a10000213d000000700210009c000000e30000613d000000710110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000101000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d00000000010000310000009f02100039000000200300008a000000000232016f000000600320009c000000620000413d000000650100004100000000001004350000004101000039000000040010043f00000066010000410000017700010430000000680210009c000000c10000213d0000006b0210009c000000f80000613d0000006c0110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d000000000100041a000000010200008a000000000221004b000001500000c13d000000650100004100000000001004350000001101000039000000040010043f00000066010000410000017700010430000000400020043f0000001f0210018f00000001030003670000000504100272000000700000613d00000000050000190000000506500210000000000763034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b000000680000413d000000000520004c0000007f0000613d0000000504400210000000000343034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000006102000041000000400310008c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d000000800100043d000000620210009c000001430000213d000000a00200043d000000620320009c000001430000213d0000000103000039000000000030041b000000000403041a0000006304400197000000000114019f000000000013041b0000000201000039000000000301041a0000006303300197000000000223019f000000000021041b0000002001000039000001000010044300000120000004430000006401000041000001760001042e0000006e0210009c000001140000613d0000006f0110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000201000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e000000690210009c000001320000613d0000006a0110009c000001430000c13d0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000401000039000000000101041a00000072011001980000000001000019000000010100c039000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d000000000100041a000000800010043f0000007901000041000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000301000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001430000c13d0000000401000039000000000101041a00000078011001980000000001000019000000010100c039000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000001000416000000000110004c000001430000c13d000000040100008a00000000011000310000006102000041000000000310004c000000000300001900000000030240190000006101100197000000000410004c000000000200a019000000610110009c00000000010300190000000001026019000000000110004c000001450000613d000000000100001900000177000104300000000401000039000000000101041a0000006201100197000000400200043d00000000001204350000005f010000410000005f0320009c0000000001024019000000400110021000000073011001c7000001760001042e0000000101100039000000000010041b0000000301000039000000000201041a00000063022001970000000003000411000000000232019f000000000021041b0000000201000039000000000101041a00000062011001970000007402000041000000000131004b00000000010000190000000001026019000000750230004100000062022001970000000103000039000000000303041a00000062033001970000007604000041000000000323004b000000000300001900000000030460190000000404000039000000000504041a0000007705500197000000000225019f000000000232019f000000000112019f000000000014041b0000005f01000041000000400200043d0000005f0320009c00000000010240190000004001100210000001760001042e0000017500000432000001760001042e0000017700010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000100000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000cd68100b00000000000000000000000000000000000000000000000000000000e79b147800000000000000000000000000000000000000000000000000000000e79b147900000000000000000000000000000000000000000000000000000000eee17bee00000000000000000000000000000000000000000000000000000000cd68100c00000000000000000000000000000000000000000000000000000000d09de08a00000000000000000000000000000000000000000000000000000000bdb1f55e00000000000000000000000000000000000000000000000000000000bdb1f55f00000000000000000000000000000000000000000000000000000000bfa75d4b000000000000000000000000000000000000000000000000000000003fa4f245000000000000000000000000000000000000000000000000000000005aa6e67500000000000000000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000eeeeffffffffffffffffffffffffffffffffeeef0000000000000000000000010000000000000000000000000000000000000000ffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000002000000080000000000000000039179d4f65a178d74876dab1a667c549a63351701c0f7ba1042917c4bf864188',
	linkReferences: {},
	deployedLinkReferences: {},
	factoryDeps: {},
};

main().catch((error) => {
	throw error;
});
