{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xBD80E505ECC49BAE2cc86094a78fA0e2dB28b52A",
    "txHash": "0xdff305ec1c17b9ea8854d44eb01d6ccf431da98db263654dc6f6d3e3d1054f4d"
  },
  "proxies": [
    {
      "address": "0x139EE25DCad405d2a038E7A67f9ffdbf0f573f3c",
      "txHash": "0x010a3e0378f86451eeece305b5fc6865cc095ed0dc3ba49d1d02392305d2bc32",
      "kind": "transparent"
    },
    {
      "address": "0x703b52F2b28fEbcB60E1372858AF5b18849FE867",
      "txHash": "0x6519c6e39eaef48955c0d9caf58bd9f1a122e0b4ea5e07e241753e89f2664d0c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1eed597a8a42cd1e50e6a9c619ee73b59bc02cd732ecbbf194e146ff63c33a59": {
      "address": "0x13f46B59067f064C634Fb17e207ed203916dcCC8",
      "txHash": "0x70f8674e7744d0cbc94a6917d5fdd7f70df08e1a23a1e943ca20415fde0b18d9",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_delay",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:23"
          },
          {
            "label": "_gracePeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:25"
          },
          {
            "label": "_minimumDelay",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:27"
          },
          {
            "label": "_maximumDelay",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:29"
          },
          {
            "label": "_guardian",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:31"
          },
          {
            "label": "_actionsSetCounter",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:34"
          },
          {
            "label": "_actionsSets",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(ActionsSet)8044_storage)",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:36"
          },
          {
            "label": "_queuedActions",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "BridgeExecutorBase",
            "src": "l2/contracts/governance/BridgeExecutorBase.sol:38"
          },
          {
            "label": "_ethereumGovernanceExecutor",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "L2BridgeExecutor",
            "src": "l2/contracts/governance/L2BridgeExecutor.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ActionsSet)8044_storage)": {
            "label": "mapping(uint256 => struct IExecutorBase.ActionsSet)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ActionsSet)8044_storage": {
            "label": "struct IExecutorBase.ActionsSet",
            "members": [
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1df6d88c698578ce5746026ba557716325862604b8c7ed4cd29e76f50eac21fe": {
      "address": "0xC7A0DAA1B8FeA68532B6425D0e156088B0D2ab2c",
      "txHash": "0x7191309379064bee5de2339f977c4baa9ed87b983dbd2e9e7f49a23020680897",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ERC20CoreUpgradeable",
            "src": "l2/contracts/token/ERC20CoreUpgradeable.sol:12"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20CoreUpgradeable",
            "src": "l2/contracts/token/ERC20CoreUpgradeable.sol:15"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20CoreUpgradeable",
            "src": "l2/contracts/token/ERC20CoreUpgradeable.sol:18"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NoncesUpgradeable",
            "src": "l2/contracts/token/utils/NoncesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NoncesUpgradeable",
            "src": "l2/contracts/token/utils/NoncesUpgradable.sol:63"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "l2/contracts/token/ERC20PermitUpgradeable.sol:95"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "156",
            "type": "t_uint8",
            "contract": "ERC20MetadataUpgradeable",
            "src": "l2/contracts/token/ERC20MetadataUpgradeable.sol:25"
          },
          {
            "label": "bridge",
            "offset": 1,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC20BridgedUpgradeable",
            "src": "l2/contracts/token/ERC20BridgedUpgradeable.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
